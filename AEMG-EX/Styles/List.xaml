<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:AEMG_EX"
                    xmlns:core="clr-namespace:AEMG_EX.Core;assembly=AEMG-EX.Core">

    <Style x:Key="AEActionListBox" TargetType="{x:Type ListBox}">
        <Style.Resources>
            <Style TargetType="ListBoxItem">
                <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
            </Style>
        </Style.Resources>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SelectionMode" Value="Extended"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type core:IAEActionViewModel}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding ActionDescription}"/>
                        <TextBlock Text=" - "/>
                        <TextBlock Text="{Binding AEAction}"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FrontlineStyle" TargetType="{x:Type ListBox}">
        <Style.Resources>
            <Style TargetType="ListBoxItem">
                <Setter Property="Padding" Value="0"/>
                <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
            </Style>
        </Style.Resources>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <ContentPresenter/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type core:Character}">
                    <DockPanel LastChildFill="False">
                        <Border DockPanel.Dock="Top" CornerRadius="4" BorderThickness="2" SnapsToDevicePixels="True"
                                BorderBrush="{StaticResource SkillBorderBrush}" Background="{StaticResource BackgroundLightTransparentBrush}" Width="100" Margin="0 0 6 0" 
                                Visibility="{Binding DataContext.IsSelectedSkillVisible, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Converter={local:BooleanToVisibilityConverter}}">
                            <TextBlock Text="{Binding CurrentAction, Converter={local:SkillEnumToStringConverter}}" TextAlignment="Center" Foreground="{StaticResource ForegoundLightBrush}" FontSize="16" FontFamily="Times New Roman"/>
                        </Border>
                        <Button DockPanel.Dock="Bottom" Style="{StaticResource ImageButton}" Tag="{Binding CharacterIMG}" Width="100" Height="88" Margin="0 6 6 0" 
                            Command="{Binding DataContext.SelectCharacterCommand, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" 
                            CommandParameter="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"/>
                    </DockPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BacklineStyle" TargetType="ListBox" BasedOn="{StaticResource FrontlineStyle}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type core:Character}">
                    <DockPanel LastChildFill="False" >
                        <Border DockPanel.Dock="Top" CornerRadius="4" BorderThickness="2" SnapsToDevicePixels="True"
                                BorderBrush="{StaticResource SkillBorderBrush}" Background="{StaticResource BackgroundLightTransparentBrush}" Width="100" Margin="0 0 6 0"
                                >
                            <Border.Visibility>
                                <MultiBinding Converter="{local:BacklineSkillVisibilityConverter}">
                                    <Binding Path="DataContext.IsSelectedSkillVisible" RelativeSource="{RelativeSource AncestorType={x:Type ListBox} }"/>
                                    <Binding Path="IsBacklineSkillVisible"/>
                                </MultiBinding> 
                            </Border.Visibility>
                            <TextBlock Text="{Binding CurrentAction}" TextAlignment="Center" Foreground="{StaticResource ForegoundLightBrush}" FontSize="16" FontFamily="Times New Roman"/>
                        </Border>
                        <Button DockPanel.Dock="Bottom" Style="{StaticResource ImageButton}" Tag="{Binding CharacterIMG}" Width="100" Height="88" Margin="0 0 6 0"
                                Command="{Binding DataContext.SelectCharacterCommand, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" 
                                CommandParameter="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"/>
                    </DockPanel>
                </DataTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LeftRightList" TargetType="{x:Type ListBox}" BasedOn="{StaticResource FrontlineStyle}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Button Style="{StaticResource ImageButton}" Tag="{Binding Converter={local:LeftRightToImageConverter}}" Width="30" Margin="0 -3"
                            Command="{Binding DataContext.UndoSelectCommand, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" ToolTip="Undo select"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>