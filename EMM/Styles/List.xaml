<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:EMM"
                    xmlns:core="clr-namespace:EMM.Core.ViewModels;assembly=EMM.Core"
                    xmlns:data="clr-namespace:Data;assembly=Data">

    <Style TargetType="ListBox">
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
    </Style>
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EditableListBoxItemStyle" TargetType="local:EditableListBoxItem">
        <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="4,1"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
    </Style>

    <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
    <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
    <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
    <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>

    <Style x:Key="ActionList" TargetType="local:AutoListBox">
        <Setter Property="SelectionMode" Value="Extended" />
        <Style.Resources>
            <Style TargetType="local:EditableListBoxItem" BasedOn="{StaticResource EditableListBoxItemStyle}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="local:EditableListBoxItem">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="1" x:Name="ItemTextBlock" ToolTip="{Binding ActionDescription}" ToolTipService.ShowDuration="30000">
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="{}{0} x{1}">
                                                <Binding Path="ActionDescription"/>
                                                <Binding Path="Repeat" FallbackValue="1"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                    <TextBox Grid.Column="1" x:Name="EditableTextBox" BorderThickness="0" Background="{Binding Text, RelativeSource={RelativeSource Self}, Converter={local:TextLengthToBackgroundColorConverter}}"
                                             Text="{Binding ActionDescription, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed"/>
                                    <Image Margin="0 0 5 0"  Grid.Column="0" Source="{Binding BasicAction, Converter={local:BasicActionToImageConverter}}" Width="12" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseDoubleClicked" Value="True">
                                    <Setter TargetName="EditableTextBox" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="ItemTextBlock" Property="Visibility" Value="Hidden"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter TargetName="EditableTextBox" Property="Visibility" Value="Hidden"/>
                                    <Setter TargetName="ItemTextBlock" Property="Visibility" Value="Visible"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="GroupList" TargetType="local:AutoListBox">
        <Setter Property="SelectionMode" Value="Extended" />
        <Style.Resources>
            <Style TargetType="local:EditableListBoxItem" BasedOn="{StaticResource EditableListBoxItemStyle}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="local:EditableListBoxItem">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <TextBlock x:Name="ItemTextBlock" ToolTip="{Binding ActionDescription}" ToolTipService.ShowDuration="30000">
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="{}{0} x{1}">
                                                <Binding Path="ActionDescription"/>
                                                <Binding Path="Repeat" FallbackValue="1"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                    <TextBox x:Name="EditableTextBox" BorderThickness="0" Background="{Binding Text, RelativeSource={RelativeSource Self}, Converter={local:TextLengthToBackgroundColorConverter}}"
                                             Text="{Binding ActionDescription, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed"/>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseDoubleClicked" Value="True">
                                    <Setter TargetName="EditableTextBox" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="ItemTextBlock" Property="Visibility" Value="Hidden"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter TargetName="EditableTextBox" Property="Visibility" Value="Hidden"/>
                                    <Setter TargetName="ItemTextBlock" Property="Visibility" Value="Visible"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
    </Style>
    
    <Style x:Key="PointListBox" TargetType="ListBox">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="MaxHeight" Value="130"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type core:SwipePointWrapper}">
                    <StackPanel>
                        <StackPanel.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                            </Style>
                        </StackPanel.Resources>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="➠"/>
                            <local:PointInput X="{Binding PointX}" Y="{Binding PointY}" FontWeight="SemiBold"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Hold: " Margin="5 0 0 0"/>
                        <local:NumbericTextBox Text="{Binding HoldTime, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0" Background="Transparent"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <ComboBox Margin="5 0 0 0" Width="80" ItemsSource="{Binding SpeedOptions}" SelectedItem="{Binding SwipeSpeed, Converter={local:SbyteToSpeedConverter}}"/>
                        </StackPanel>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>